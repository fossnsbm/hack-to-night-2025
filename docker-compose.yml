version: '3.8'

services:
  mysql:
    image: mysql:8.0
    restart: unless-stopped
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"

  redis:
    image: redis:6-alpine
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"

  ctfd:
    build:
      context: ./ctfd
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DATABASE_URL: mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
      DOCKER_CHALLENGES_ENABLED: "true"
      DOCKER_API_HOST: unix:///var/run/docker.sock
      DOCKER_REGISTRY_SERVER_URL: "localhost:5000"
    volumes:
      - ./ctfd/uploads:/opt/CTFd/CTFd/uploads
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8000:8000"
    depends_on:
      - mysql
      - redis

  nextjs:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./platform:/app
    command: |
      sh -c "
        corepack enable &&
        corepack prepare pnpm@latest --activate &&
        pnpm install &&
        pnpm run build &&
        pnpm run start
      "
    ports:
      - "3000:3000"
    depends_on:
      - ctfd

volumes:
  mysql-data: {} 